//slip-2
//SADP-Singlton
//Write a Java Program to implement Singleton pattern for multithreading.
public class Main {
public static void main(String ar[]) {
Test1 t = new Test1();
Test1 t2 = new Test1();
Test1 t3 = new Test1();
Thread tt = new Thread(t);
Thread tt2 = new Thread(t2);
Thread tt3 = new Thread(t3);
Thread tt4 = new Thread(t);
Thread tt5 = new Thread(t);
tt.start();
tt2.start();
tt3.start();
tt4.start();
tt5.start();
}
}
final class Test1 implements Runnable {
@Override
public void run() {
for (int i = 0; i < 5; i++) {
System.out.println(Thread.currentThread().getName() + " : " +
Singleton.getInstance().hashCode());
}
}
}
class Singleton {
private final static Singleton sing = new Singleton();
private Singleton() {
}
public static Singleton getInstance() {
return sing;
}
}

//ML-Null values

#Write a python program to find all null values in a given dataset and remove them.
import pandas as pd
df=pd.read_csv('D:\data.csv')
print(df.isnull())
df1=df.dropna()
print(df1)

//Web Framework-

<html> 
<head> 
 
</head> 
<center><h2>Employee Registration Form</h2></center> 
<body> 
    <div id="error"></div> 
<form id="form1" onsubmit="validation()"> 
 <table align="center" border="3" cellspacing ="10"> 
     <tr><td>Your First name: </td><td><input type="text" id="fname" name="Fname"></td></tr><br> 
<tr><td>Enter Last name: </td><td><input type ="text" id="lname" name="lname"></td></tr><br> 
<tr><td>Enter age: </td><td><input type ="text" id="age" name="age"></td></tr><br> 
<tr><td>Enter mobile: </td><td><input type ="text" id="mobile" name="mobile"></td></tr><br> 
<tr><td>Enter Address : </td><td><input type ="text" id="address" name="address"></td></tr><br> 
<tr><td>Select Designation :</td><td><Select type="text" id="desig"  name="designation" > 
    <option value="null" >select designation</option> 
    <option value="Employee">Employee</option> 
    <option value ="Employee ">Fresher</option> 
    <option value ="Employee ">Manager</option> 
    <option value ="Employee ">Assistant</option> 
    <option value ="Employee ">Technical support</option>  
    <option value ="Employee ">Accountant</option> 
</Select></td></tr> 
<tr><td>Date OF Birth(DOB) </td><td><input type ="text" id="dob" name="dob"></td></tr><br> 
<tr><td>Date OF Joining </td><td><input type ="text" id="doj" name="doj"></td></tr><br> 
<tr><td>Salary </td><td><input type ="text" id="sal" name="sal"></td></tr><br> 
<tr><td><input type = "submit" value="Register"></td></tr> 
</table> 
</form> 
<script src="Assignment2.js" type="text/javascript"></script></body></html> 


function validation(){ 
     const fname=document.getElementById("fname") 
     const lname=document.getElementById("lname") 
     const form = document.getElementById("form1
     const age = document.getElementById("age") 
     const error = document.getElementById("error") 
     const mobile = document.getElementById("mobile") 
     const address = document.getElementById("address") 
     const dob = document.getElementById("dob") 
     const desig = document.getElementById("desig") 
     const dojoin = document.getElementById("doj") 
     const sal = document.getElementById("sal") 
 
const salpattern = /^\d{1,6}(?:\.\d{0,2})?$/ 
const dobPattern=/(((0|1)[0-9]|2[0-9]|3[0-1])\/(0[1-9]|1[0-2])\/((19|20)\d\d))$/; 
const pattern = /^[A-Z a-z]+$/; 
const mpatrn = /^([9]{1})-([0-9]{9})$/ const addpatrn = /^[A-Z a-z 0-9]+$/ 
 if(!pattern.test(fname.value)) 
{ 
    alert("first  name should  contain alphabate only or it can't be null")     return false 
}  
if(!pattern.test(lname.value)) 
{ 
    alert("Last name should contain alphabates only")     return false 
}  if(age.value <= 18 || age.value > 50) 
{     alert("Age should be between 18 to 50 ")     return false 
}  if(mobile.value.length != 10) 
{     alert("Mobile number should be of ten numbers")     return false 
      
}  if(!addpatrn.test(address.value)) 
{     alert("Address does not contains special character")     return false 
}  if(!dobPattern.test(dob.value)) 
{     alert("Enter birth date in [dd/mm/yyyy] format")     return false 
}  if(desig.value == "") 
{     alert("Select your designation")     return false 
}  if(!dobPattern.test(dojoin.value)) 
{     alert("Enter join date in [dd/mm/yyyy] format ")     return false 
}  if(!salpattern.test(sal.value)) 
{ 
    alert("Something is wrong while entering salary!")     return false 
}  
} 

